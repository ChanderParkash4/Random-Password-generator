#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>
#include <cctype>
using namespace std;

// Function to generate password with given character set
string generatePassword(int length, string charset) {
    string password = "";
    for (int i = 0; i < length; i++) {
        password += charset[rand() % charset.size()];
    }
    return password;
}
int main() {
    srand(time(0));  // Seed random number generator

    int length;
    cout << "How long should the password be? (4-12): ";
    cin >> length;

    if (length < 4 || length > 12) {
        cout << "Error: Password length must be between 4 and 12!" << endl;
        return 1;
    }
    // Character sets for different password strengths
    string numbers = "0123456789";
    string lettersNumbers = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    string fullSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+[]{}<>?";

    // Step 1: Generate basic password (only numbers)
    string password = generatePassword(length, numbers);
    cout << "Generated Password: " << password << endl;

    char choice;
    cout << "Is this password okay? (y/n): ";
    cin >> choice;

    if (tolower(choice) == 'y') {
        cout << "Thank you, very feed! :)" << endl;
        return 0;
    }

    // Step 2: Generate stronger password (letters + numbers)
    password = generatePassword(length, lettersNumbers);
    cout << "Generated Strong Password: " << password << endl;

    cout << "Is this password strong enough? (y/n): ";
    cin >> choice;

    if (tolower(choice) == 'y') {
        cout << "Thank you, very feed! :)" << endl;
        return 0;
    }

    // Step 3: Generate strongest password (letters + numbers + symbols)
    password = generatePassword(length, fullSet);
    cout << "Generated Strongest Password: " << password << endl;
    cout << "This is the most strongest Password :)" << endl;

    return 0;
}
